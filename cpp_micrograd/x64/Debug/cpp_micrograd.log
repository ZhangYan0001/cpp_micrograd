  main.cpp
F:\cpp_advance\cpp_project\cpp_micrograd\cpp_micrograd\engine.h(48,17): error C2665: “CMG::Value<int>::Value”: 没有重载函数可以转换所有参数类型
  (编译源文件“main.cpp”)
  F:\cpp_advance\cpp_project\cpp_micrograd\cpp_micrograd\engine.h(21,3):
  可能是“CMG::Value<int>::Value(T,std::tuple<CMG::Value<T>,CMG::Value<T>> *,std::string)”
          with
          [
              T=int
          ]
  	F:\cpp_advance\cpp_project\cpp_micrograd\cpp_micrograd\engine.h(48,17):
  	“CMG::Value<int>::Value(T,std::tuple<CMG::Value<T>,CMG::Value<T>> *,std::string)”: 无法将参数 2 从“std::tuple<CMG::Value<int> *,CMG::Value<int>> *”转换为“std::tuple<CMG::Value<int>,CMG::Value<int>> *”
          with
          [
              T=int
          ]
  		F:\cpp_advance\cpp_project\cpp_micrograd\cpp_micrograd\engine.h(48,51):
  		指向的类型不相关; 转换需要 reinterpret_cast、C 样式强制转换或带圆括号的函数样式强制转换
  F:\cpp_advance\cpp_project\cpp_micrograd\cpp_micrograd\engine.h(48,17):
  尝试匹配参数列表“(T, std::tuple<CMG::Value<int> *,CMG::Value<int>> *, std::string)”时
          with
          [
              T=int
          ]
  F:\cpp_advance\cpp_project\cpp_micrograd\cpp_micrograd\engine.h(48,17):
  模板实例化上下文(最早的实例化上下文)为
  	F:\cpp_advance\cpp_project\cpp_micrograd\cpp_micrograd\test.h(17,23):
  	查看对正在编译的函数 模板 实例化“CMG::Value<int> CMG::Value<int>::operator +<int>(CMG::Value<int> &)”的引用
  		F:\cpp_advance\cpp_project\cpp_micrograd\cpp_micrograd\test.h(17,18):
  		请参阅 "Test::test_value_init" 中对 "CMG::Value<int>::operator +" 的第一个引用
  
